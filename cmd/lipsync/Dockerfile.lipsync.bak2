# Use the custom base image
FROM livepeer/ai-runner:base

LABEL maintainer="Yondon Fu <yondon@livepeer.org>"

# Set non-interactive frontend
ENV DEBIAN_FRONTEND=noninteractive

# Define the Python version
ARG PYTHON_VERSION=3.11

# Install prerequisites and Anaconda dependencies
RUN apt-get update && \
    apt-get install -y wget bzip2 git && \
    rm -rf /var/lib/apt/lists/*

# Set environment variables for Anaconda
ENV CONDA_INSTALLER=Anaconda3-2024.06-1-Linux-x86_64.sh \
    CONDA_DIR=/models--yerfor--Real3DPortrait/anaconda3 \
    REPO_URL=https://github.com/yerfor/Real3DPortrait.git \
    REPO_DIR=/models--yerfor--Real3DPortrait \
    ENV_NAME=real3dportrait

# Step 1: Download and install Anaconda
RUN wget https://repo.anaconda.com/archive/$CONDA_INSTALLER && \
    bash ./$CONDA_INSTALLER -b -p $CONDA_DIR && \
    rm $CONDA_INSTALLER

# Step 2: Initialize conda
ENV PATH="$CONDA_DIR/bin:$PATH"
RUN conda init bash

# Step 3: Clone the repository containing inference.py if it doesn't already exist
RUN [ ! -d $REPO_DIR ] && git clone $REPO_URL $REPO_DIR || echo "Repository already exists."

# Set the working directory to the cloned repository
WORKDIR $REPO_DIR
# Step 4: Create and activate conda environment
RUN conda create -p $CONDA_DIR/envs/$ENV_NAME python=3.9 -y && \
    echo "source $CONDA_DIR/bin/activate $ENV_NAME" >> ~/.bashrc && \
    /bin/bash -c "source $CONDA_DIR/bin/activate $ENV_NAME; conda init bash"

# Step 5: Install dependencies in the conda environment
RUN conda install -p $CONDA_DIR/envs/$ENV_NAME conda-forge::ffmpeg -y && \
    conda install -p $CONDA_DIR/envs/$ENV_NAME pytorch torchvision torchaudio pytorch-cuda=12.1 -c pytorch -c nvidia -y && \
    conda install -p $CONDA_DIR/envs/$ENV_NAME pytorch3d::pytorch3d -y

# Step 6: Install Python packages via pip
RUN pip install cython openmim==0.3.9
RUN /bin/bash -c "source $CONDA_DIR/bin/activate $ENV_NAME && env && python --version && which python && conda env list"
# Step 6: Verify that the correct Python version is being used and conda environment is activated
# RUN /bin/bash -c "source $CONDA_DIR/bin/activate $ENV_NAME && python --version && conda env list && which python && env"

# Step 6.5: Ensure setuptools is compatible
RUN conda install -p $CONDA_DIR/envs/$ENV_NAME setuptools==59.5.0 -y

# Step 7: Install mmcv via mim (separate step)
RUN /bin/bash -c "source $CONDA_DIR/bin/activate $ENV_NAME && mim install mmcv==2.1.0"

# Install other dependencies
RUN pip install -r docs/prepare_env/requirements.txt -v --use-deprecated=legacy-resolver

# Set the entrypoint for the container
CMD ["uvicorn", "app.main:app", "--log-config", "app/cfg/uvicorn_logging_config.json", "--host", "0.0.0.0", "--port", "8000"]
