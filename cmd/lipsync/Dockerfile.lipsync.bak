FROM livepeer/ai-runner:base
ENV DEBIAN_FRONTEND=noninteractive

# Add the DeadSnakes PPA to get Python 3.10
RUN apt-get update && apt-get install -y software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update

# Install necessary build tools and Python
RUN apt-get update && apt-get install -y \
    ffmpeg libsm6 libxext6 python3-dev ninja-build \
    gawk bison gcc make wget tar git bzip2 python3-pip python3.10 python3.10-dev python3.10-venv\
    build-essential cmake libgl1-mesa-dev libglib2.0-0 \
    libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \
    curl llvm libncurses5-dev libncursesw5-dev \
    xz-utils tk-dev libffi-dev liblzma-dev python3-openssl \
    portaudio19-dev \
    libasound2-dev \
    libjack-jackd2-dev \
    libopenblas-dev \
    liblapack-dev \
    build-essential \
    autoconf \
    automake \
    libtool \
    pkg-config \
    nasm \
    libpng-dev \
    libjpeg-dev \
    libwebp-dev \
    libbrotli-dev \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.10 as the version for lipsync venv
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1 \
    && update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1 \
    && python --version

# create and activate our venv
ENV VIRTUAL_ENV=/opt/lipsync_venv
RUN python3.10 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Upgrade pip (24.2?) and install openmim
# RUN python3.9 -m pip install --upgrade pip
# RUN apt-get remove -y python3-yaml
RUN pip install -U openmim==0.3.9

# Install PyTorch with CUDA 12.1 support
RUN pip3 install torch==2.3.1 --extra-index-url https://download.pytorch.org/whl/cu121

RUN pip3 install setuptools 
# Install mmcv using openmim
RUN pip3 install mmcv==2.2.0 -f https://download.openmmlab.com/mmcv/dist/cu121/torch2.4/index.html

# Download and install GLIBC 2.35
RUN wget http://mirrors.edge.kernel.org/ubuntu/pool/main/g/glibc/libc6_2.35-0ubuntu3_amd64.deb && \
    dpkg -i libc6_2.35-0ubuntu3_amd64.deb || apt-get install -f -y

# Clone the repository
ARG REPO_URL=https://github.com/pschroedl/Real3DPortrait.git
ARG REPO_DIR=/models--yerfor--Real3DPortrait
RUN git clone -b upgrade_scipy $REPO_URL $REPO_DIR

# Set the working directory
WORKDIR $REPO_DIR
# RUN apt-get update && apt-get install -y --fix-broken --allow-remove-essential
# RUN apt-get update && apt-get install portaudio19-dev
# RUN pip3 install pyaudio
# Install remaining Python dependencies
RUN pip3 install setuptools==60.2.0
RUN pip3 install numpy==1.23.0
RUN pip3 install cython && \
    pip3 install -r docs/prepare_env/requirements.txt -v && \
    pip3 install -r docs/prepare_env/requirements.txt -v --use-deprecated=legacy-resolver

# Install PyTorch3D with CUDA 12.1 support
RUN pip3 install iopath fvcore
RUN pip3 install --no-index --no-cache-dir pytorch3d -f https://dl.fbaipublicfiles.com/pytorch3d/packaging/wheels/py310_cu121_pyt231/download.html

# Install CUDA toolkit from the NVIDIA repository
RUN apt-get update && apt-get install -y wget software-properties-common \
    && wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin \
    && mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600 \
    && wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub -O /tmp/cuda-repo.gpg \
    && apt-key add /tmp/cuda-repo.gpg \
    && add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /" \
    && apt-get update \
    && apt-get install -y cuda-toolkit-12-1


COPY ./runner/app/ /app/app
COPY ./cmd/lipsync/run_real3dportrait.sh /app/run_real3dportrait.sh
# COPY ./cmd/lipsync/run_inference.sh /app/run_inference.sh
WORKDIR /app/

# CMD ["uvicorn", "app.main:app", "--log-config", "app/cfg/uvicorn_logging_config.json", "--host", "0.0.0.0", "--port", "8000"]
# CMD ["bash", "/app/run_inference.sh"]

# Ensure the virtual environment is activated before starting Uvicorn
ENTRYPOINT ["bash", "-c", "source /opt/venv/bin/activate && exec uvicorn app.main:app --log-config app/cfg/uvicorn_logging_config.json --host 0.0.0.0 --port 8000"]